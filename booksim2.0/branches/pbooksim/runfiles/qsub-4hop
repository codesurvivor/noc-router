// $Id $

// Copyright (c) 2007-2012, Trustees of The Leland Stanford Junior University
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

#!/usr/bin/perl
use Shell;

#@traffic = ("bitcomp","bitrev","uniform","transpose","shuffle","tornado","neighbor","diagonal");
#@packetsize=(32,16,8,4,2,1);

$packetsize = 1;
for($i= 1/$packetsize; $i<50/$packetsize;$i=$i+100/$packetsize){
######################DECLARE################################
    $traffic = "uniform";
    $injectionrate = 5/100;
######################DECLARE################################

    $outputname = "hop4"."_"."1024";

    system ("cp -f immutable temp/flatflyconfig_$outputname");

    open(inputFile,">>","temp/flatflyconfig_$outputname") or die "FUCK YOU"; #
    print inputFile "


// Flatfly 
//
// #node = k^(n+1)
//
// x, y, specifies the arrangement of routers in x and y dim
// xr, yr specifiies the arayment of clients in a router
//
topology = flatfly;


c  = 4;
k  = 4;
n  = 4;
x  = 16;
y  = 16;
xr = 2;
yr = 2;
limit = 1024;


//
// Routing
//

routing_function = ugal;

const_flits_per_packet = $packetsize;

traffic       = $traffic;

injection_rate = $injectionrate;

";
    
    close(inputFile);
    


    open(qsubfile,">","temp/submit_flatfly_$outputname") or die "Can't open flatfly submit file";
    
    print qsubfile "
#!/bin/sh
#\$ -cwd
#\$ -N $outputname
#\$ -o ../$outputname
#\$ -e temp/

../nocsim temp/flatflyconfig_$outputname
    ";

system("qsub -S /bin/sh temp/submit_flatfly_$outputname");;
print "Sumbited $outputname\n";

}
