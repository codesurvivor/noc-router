// $Id $

// Copyright (c) 2007-2012, Trustees of The Leland Stanford Junior University
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

#!/usr/bin/perl
use Shell;

#@traffic = ("bitcomp","bitrev","uniform","transpose","shuffle","tornado","neighbor","diagonal");
#@packetsize=(32,16,8,4,2,1);

$packetsize = 1;
for($i= 70; $i<80;$i+=10){
######################DECLARE################################
    $traffic = "neighbor";
    $injectionrate = $i/100;
######################DECLARE################################

    $outputname = "area_mesh"."_"."$traffic"."_"."$injectionrate";

    system ("cp -f immutable temp/meshconfig_$outputname");

    open(inputFile,">>","temp/meshconfig_$outputname") or die "FUCK YOU"; #
    print inputFile "

//
// Mesh
//
topology = mesh;
k  = 8;
n  = 2;
//
// Routing
//
routing_function = dor;

const_flits_per_packet = $packetsize;

traffic       = $traffic;

injection_rate = $injectionrate;


";
    
    close(inputFile);
    


    open(qsubfile,">","temp/submit_mesh_$outputname") or die "Can't open mesh submit file";
    
    print qsubfile "
#!/bin/sh
#\$ -cwd
#\$ -N $outputname
#\$ -o ../$outputname
#\$ -e temp/

../nocsim temp/meshconfig_$outputname
    ";

system("qsub -S /bin/sh temp/submit_mesh_$outputname");;
print "Sumbited $outputname\n";

}
