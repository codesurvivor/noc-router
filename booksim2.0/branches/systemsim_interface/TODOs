*TODO
?To investigate

***Core hands a message to booksim through messageIs. Currently booksim stores the mssages in a queue regardless the virtual channels. On packet generation, booksim pulls a packet out of the queue. Maybe need separate queues for separate VCs. 

***systemsim virtual channel is stored as "msg->VirtualChannel" should we implement multiple network VC per systemsim VC? Currently VC assignment is not implemented, any packet go anywhere it please
***If VCs are set, routing algorithm need to be changed to preserve VC between each hop. 

**At somepoint systemsim starts to delete buffers, network statistic collection should end here

**synchronize how systemsim and booksim number the nodes.

**The throughput stats is computed based on network time which is always less than system time since network time only advance when there are packets in flight.

**Alot of hacks to fool systemsim like "nodes[dest]->messageIs(msg,(const Link*)1 /*bypass null check*/);"

*Booksim config file is hard coded into BooksimWrapper.cpp

*Should limit the network loops if only a portion of the cores are active. 

*Booksim is inserted into the event queue based on the number of packets in flight. Is there any other condition which network need to wakeup?

*The injection notification interface is an array "hasMessage" each element corresponds to a node. +1 when message available, -1 when message injected into the network

